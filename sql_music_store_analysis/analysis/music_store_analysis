-- Question Set 1 - Easy
-- 1. Who is the senior most employee based on job title?
SELECT * FROM employee
ORDER BY levels DESC
LIMIT 1;

-- 2. Which countries have the most Invoices?
SELECT billing_country, COUNT(invoice_id) AS invoice_count FROM invoice
GROUP BY billing_country
ORDER BY invoice_count DESC
LIMIT 1;


-- 3. What are top 3 values of total invoice?
SELECT total FROM invoice
ORDER BY total desc
LIMIT 3;

SELECT SUM(unit_price * quantity) AS total_amount
FROM invoice_line
GROUP BY invoice_id
ORDER BY total_amount DESC
LIMIT 3;


/* 4. Which city has the best customers? We would like to throw a promotional Music
Festival in the city we made the most money. Write a query that returns one city that
has the highest sum of invoice totals. Return both the city name & sum of all invoice
totals */
SELECT billing_city, SUM(total) AS total_amount
FROM invoice
GROUP BY billing_city
ORDER BY total_amount DESC
LIMIT 1;


/* 5. Who is the best customer? The customer who has spent the most money will be
declared the best customer. Write a query that returns the person who has spent the
most money. */
SELECT c.customer_id, c.first_name, c.last_name, SUM(total) AS total_amount
FROM invoice AS i
INNER JOIN customer AS c
	ON c.customer_id = i.customer_id
GROUP BY c.customer_id
ORDER BY total_amount DESC
LIMIT 1;


-- Question Set 2 – Moderate
/* 1. Write query to return the email, first name, last name, & Genre of all Rock Music
listeners. Return your list ordered alphabetically by email starting with A */
SELECT  DISTINCT c.first_name, c.last_name, c.email
FROM customer AS c
JOIN invoice AS i
	ON i.customer_id = c.customer_id
JOIN invoice_line AS il
	ON il.invoice_id = i.invoice_id
WHERE track_id in 
	(SELECT track_id FROM track AS t
		JOIN genre AS g
			ON g.genre_id = t.genre_id
				WHERE g.name = 'Rock')
ORDER BY c.email;


/* 2. Let's invite the artists who have written the most rock music in our dataset. Write a
 query that returns the Artist name and total track count of the top 10 rock bands */
SELECT artist.name AS artist_name, Count(*) AS no_of_songs
FROM artist
JOIN album ON album.artist_id = artist.artist_id
JOIN track ON track.album_id = album.album_id
WHERE track_id IN (SELECT track_id FROM track 
	WHERE genre_id IN (SELECT genre_id FROM genre WHERE name = 'Rock'))
GROUP BY artist.name
	ORDER BY no_of_songs DESC;


/* 3. Return all the track names that have a song length longer than the average song length.
Return the Name and Milliseconds for each track. Order by the song length with the
longest songs listed first */
SELECT name, milliseconds
FROM track
WHERE milliseconds > (SELECT AVG(milliseconds) FROM track)
ORDER BY milliseconds DESC;


-- Question Set 3 – Advance
/* 1. Find how much amount spent by each customer on artists? Write a query to return
customer name, artist name and total spent */
SELECT customer.first_name, customer.last_name, artist.name, SUM(invoice.total) as total_spend
FROM customer 
JOIN invoice ON invoice.customer_id = customer.customer_id
JOIN invoice_line ON invoice_line.invoice_id = invoice.invoice_id
JOIN track ON track.track_id = invoice_line.track_id
JOIN album ON album.album_id = track.album_id
JOIN artist ON artist.artist_id = album.artist_id
GROUP BY customer.first_name, customer.last_name, artist.name
ORDER BY total_spend DESC, 1, 2, 3;


/* 2. We want to find out the most popular music Genre for each country. We determine the
most popular genre as the genre with the highest amount of purchases. Write a query
that returns each country along with the top Genre. For countries where the maximum
number of purchases is shared return all Genres */
WITH popular_genre AS
(
	SELECT count(invoice_line.quantity) AS purchases,
	customer.country,
	genre.name,
	genre.genre_id,
	ROW_NUMBER() OVER(PARTITION BY customer.country ORDER BY COUNT(invoice_line.quantity) DESC) AS RowNo
	FROM invoice_line
	JOIN invoice ON invoice.invoice_id = invoice_line.invoice_id
	JOIN customer ON customer.customer_id = invoice.customer_id
	JOIN track ON track.track_id = invoice_line.track_id
	JOIN genre ON genre.genre_id = track.genre_id
	GROUP BY 2, 3, 4
	ORDER BY 2 ASC, 1 DESC
)
SELECT 
    *
FROM
    popular_genre
WHERE
    RowNo <= 1;


/* Q3: Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount. */
WITH rank_country_by_customer AS (
SELECT c.country, c.customer_id, c.first_name, c.last_name, SUM(i.total) as total_spend, RANK() OVER(PARTITION BY c.country ORDER BY SUM(i.total) DESC) AS row_no
FROM customer AS c
JOIN invoice AS i ON c.customer_id = i.customer_id
GROUP BY c.country, c.customer_id)

SELECT country, customer_id, first_name, last_name, ROUND(total_spend) FROM rank_country_by_customer
WHERE row_no = 1;
